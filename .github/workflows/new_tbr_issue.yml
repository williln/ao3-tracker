name: Process new to-be-read issues

on:
  issues:
    types: [labeled, opened, edited, reopened]

jobs:
  create-issue-comment:
    # Only run this job if the issue has the label "tbr"
    if: ${{ github.event.label.name == 'tbr' }}
    runs-on: ubuntu-latest

    # The output variables that get created
    outputs:
      issue_json: ${{ steps.set-json.outputs.issue_json }}
    steps:
      # Parse the JSON from the issue body
      - name: Parse issue
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: ${{ github.event.issue.number }}
          separator: '###'
          label_marker_start: '>>'
          label_marker_end: '<<'

      # Show the parsed JSON
      - name: Show parsed data JSON
        run: |
          echo "${{ steps.parse.outputs.payload }}"

      # Save the parsed JSON as output
      - name: Set JSON
        id: set-json
        run: echo "issue_json=${{ steps.parse.outputs.payload }}" >> $GITHUB_OUTPUT

      # See the link
      - name: From JSON
        env: ${{ fromJSON(steps.parse.outputs.payload) }}
        run: echo "${link}"

      # Run the link through the Python script
      - name: Check out repo
        uses: actions/checkout@v3

      # Generate a file with the link
      - name: Commit link to a file
        env: ${{ fromJSON(steps.parse.outputs.payload) }}
        run: |
          echo "${link}" > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "ðŸ™ƒ generated"
          git push

      # Comment some nonsense on the issue
      - name: Comment on issue
        id: create_comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "All done! âœ…"
            })

  close-issue:
    if: ${{ github.event.label.name == 'tbr' }}
    needs: create-issue-comment
    runs-on: ubuntu-latest
    steps:
      # Prove the link exists
      - name: Prove we got the link
        run: echo "${{ needs.create-issue-comment.outputs.issue_json }}"

      # Close the issue
      - name: Close issue
        uses: peter-evans/close-issue@v2
        with:
          labels: |
            tbr-done
